class Solution {
public:
    string shortestCommonSupersequence(string x, string y) {
        int n=x.size();
    int m=y.size();
  int  dp[n+1][m+1];
  for(int i=0;i<n+1;i++)
  {
      for(int j=0;j<m+1;j++)
      {
          if(i==0||j==0)dp[i][j]=0;
      }
  }
  for(int i=1;i<n+1;i++)
  {
      for(int j=1;j<m+1;j++)
      {
          if(x[i-1]==y[j-1])dp[i][j]=1+dp[i-1][j-1];
          else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
      }
  }
int idx=m+n-dp[n][m];
char ans[idx+1];
ans[idx]='\0';
  int j=m;
  int i=n;
  while(j>0&&i>0)
  {
          if(x[i-1]==y[j-1]){ans[idx-1]=x[i-1];
          i--;j--;idx--;}
          else {
              if(dp[i-1][j]>dp[i][j-1]){
              
              ans[idx-1]=x[i-1];
              idx--;i--;
              }
              else {
              ans[idx-1]=y[j-1];
              
              idx--;
              j--;
              }
          }
     
  }
  while(i>0){
      ans[idx-1]=(x[i-1]);
      i--;idx--;
  }
  while(j>0){
      ans[idx-1]=(y[j-1]);
      j--;idx--;
  }
return ans;
    }
};
